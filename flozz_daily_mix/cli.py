import argparse

from . import APPLICATION_NAME, VERSION


def generate_dumpdata_subcli(parser):
    parser.add_argument(
        "-c",
        "--config-file",
        help="a config file to read Subsonic API URL and credential from (if not provided using the CLI)",
        default=None,
    )

    parser.add_argument(
        "db_file",
        help="output SQLite database file",
    )


def generate_generate_subcli(parser):
    parser.add_argument(
        "-D",
        "--source-db",
        help="the source SQLite database file generated by 'flozz-daily-mix dumpdata' (debug)",
        default=None,
    )

    parser.add_argument(
        "-n",
        "--dry-run",
        help="generate the playlists without creating/updating them to the server",
        action="store_true",
        default=False,
    )

    parser.add_argument(
        "-P",
        "--print-playlist",
        help="print the generated playlist to stdout",
        action="store_true",
        default=False,
    )

    parser.add_argument(
        "config_file",
        help="one or more files containing configurations of playlists to generate",
        nargs="+",
    )


def generate_cli():
    parser = argparse.ArgumentParser(
        prog="flozz-daily-mix",
    )

    parser.add_argument(
        "-v",
        "--version",
        action="version",
        version="%s v%s" % (APPLICATION_NAME, VERSION),
    )

    parser.add_argument(
        "-s",
        "--subsonic-api-url",
        metavar="URL",
        help="URL of the Subsonic API",
        default=None,
    )

    parser.add_argument(
        "-u",
        "--subsonic-api-username",
        metavar="USER",
        help="name of the user for API authentication",
        default=None,
    )

    parser.add_argument(
        "-p",
        "--subsonic-api-password",
        metavar="PASSWORD",
        help="password of the user for API authentication",
        default=None,
    )

    parser.add_argument(
        "-l",
        "--subsonic-api-legacy-authentication",
        help="use the Subsonic legacy (plaintext password) authentication method",
        action="store_true",
        default=False,
    )

    subparsers = parser.add_subparsers(dest="subcommand")

    dumpdata_parser = subparsers.add_parser(
        "dumpdata",
        help="write data from the Subsonic API to a file (debug)",
    )
    generate_dumpdata_subcli(dumpdata_parser)

    generate_parser = subparsers.add_parser(
        "generate",
        help="generate playlists",
    )
    generate_generate_subcli(generate_parser)

    return parser
